{"ast":null,"code":"var defaultBindingOptions = {\n  allowDownsampling: true\n};\nexport function bindToDevicePixelRatio(canvas, options) {\n  if (options === void 0) {\n    options = defaultBindingOptions;\n  }\n\n  return new DevicePixelRatioBinding(canvas, options);\n}\n\nvar DevicePixelRatioBinding =\n/** @class */\nfunction () {\n  function DevicePixelRatioBinding(canvas, options) {\n    var _this = this;\n\n    this._resolutionMediaQueryList = null;\n\n    this._resolutionListener = function (ev) {\n      return _this._onResolutionChanged();\n    };\n\n    this._canvasConfiguredListeners = [];\n    this.canvas = canvas;\n    this._canvasSize = {\n      width: this.canvas.clientWidth,\n      height: this.canvas.clientHeight\n    };\n    this._options = options;\n\n    this._configureCanvas();\n\n    this._installResolutionListener();\n  }\n\n  DevicePixelRatioBinding.prototype.destroy = function () {\n    this._canvasConfiguredListeners.length = 0;\n\n    this._uninstallResolutionListener();\n\n    this.canvas = null;\n  };\n\n  Object.defineProperty(DevicePixelRatioBinding.prototype, \"canvasSize\", {\n    get: function get() {\n      return {\n        width: this._canvasSize.width,\n        height: this._canvasSize.height\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DevicePixelRatioBinding.prototype.resizeCanvas = function (size) {\n    this._canvasSize = {\n      width: size.width,\n      height: size.height\n    };\n\n    this._configureCanvas();\n  };\n\n  Object.defineProperty(DevicePixelRatioBinding.prototype, \"pixelRatio\", {\n    get: function get() {\n      // According to DOM Level 2 Core specification, ownerDocument should never be null for HTMLCanvasElement\n      // see https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#node-ownerDoc\n      var win = this.canvas.ownerDocument.defaultView;\n\n      if (win == null) {\n        throw new Error('No window is associated with the canvas');\n      }\n\n      return win.devicePixelRatio > 1 || this._options.allowDownsampling ? win.devicePixelRatio : 1;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  DevicePixelRatioBinding.prototype.subscribeCanvasConfigured = function (listener) {\n    this._canvasConfiguredListeners.push(listener);\n  };\n\n  DevicePixelRatioBinding.prototype.unsubscribeCanvasConfigured = function (listener) {\n    this._canvasConfiguredListeners = this._canvasConfiguredListeners.filter(function (l) {\n      return l != listener;\n    });\n  };\n\n  DevicePixelRatioBinding.prototype._configureCanvas = function () {\n    var ratio = this.pixelRatio;\n    this.canvas.style.width = this._canvasSize.width + \"px\";\n    this.canvas.style.height = this._canvasSize.height + \"px\";\n    this.canvas.width = this._canvasSize.width * ratio;\n    this.canvas.height = this._canvasSize.height * ratio;\n\n    this._emitCanvasConfigured();\n  };\n\n  DevicePixelRatioBinding.prototype._emitCanvasConfigured = function () {\n    var _this = this;\n\n    this._canvasConfiguredListeners.forEach(function (listener) {\n      return listener.call(_this);\n    });\n  };\n\n  DevicePixelRatioBinding.prototype._installResolutionListener = function () {\n    if (this._resolutionMediaQueryList !== null) {\n      throw new Error('Resolution listener is already installed');\n    } // According to DOM Level 2 Core specification, ownerDocument should never be null for HTMLCanvasElement\n    // see https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#node-ownerDoc\n\n\n    var win = this.canvas.ownerDocument.defaultView;\n\n    if (win == null) {\n      throw new Error('No window is associated with the canvas');\n    }\n\n    var dppx = win.devicePixelRatio;\n    this._resolutionMediaQueryList = win.matchMedia(\"all and (resolution: \" + dppx + \"dppx)\"); // IE and some versions of Edge do not support addEventListener/removeEventListener, and we are going to use the deprecated addListener/removeListener\n\n    this._resolutionMediaQueryList.addListener(this._resolutionListener);\n  };\n\n  DevicePixelRatioBinding.prototype._uninstallResolutionListener = function () {\n    if (this._resolutionMediaQueryList !== null) {\n      // IE and some versions of Edge do not support addEventListener/removeEventListener, and we are going to use the deprecated addListener/removeListener\n      this._resolutionMediaQueryList.removeListener(this._resolutionListener);\n\n      this._resolutionMediaQueryList = null;\n    }\n  };\n\n  DevicePixelRatioBinding.prototype._reinstallResolutionListener = function () {\n    this._uninstallResolutionListener();\n\n    this._installResolutionListener();\n  };\n\n  DevicePixelRatioBinding.prototype._onResolutionChanged = function () {\n    this._configureCanvas();\n\n    this._reinstallResolutionListener();\n  };\n\n  return DevicePixelRatioBinding;\n}();","map":null,"metadata":{},"sourceType":"module"}